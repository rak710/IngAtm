{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/employee.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","employeeService","getCity","getCities","subscribe","response","address","console","log","error","alert","message","key","results","city","name","toLowerCase","indexOf","push","length","searchCity","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","EmployeeService","http","apiServerUrl","apiBaseUrl","get","employeeId","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { City } from './City';\nimport { Address } from './address';\nimport { EmployeeService } from './employee.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public city: City[];\n  public address: Address[];\n  \n\n  constructor(private employeeService: EmployeeService){}\n\n  ngOnInit() {\n    this.getCity();\n  }\n\n  public getCity(): void {\n    this.employeeService.getCities().subscribe(\n      (response: Address[]) => {\n        this.address = response;\n        console.log(this.address);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  \n\n  public searchCity(key: string): void {\n    console.log(key);\n    const results: City[] = [];\n    for (const city of this.city) {\n      if (city.name.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      ) {\n        results.push(city);\n      }\n    }\n    this.city = results;\n    if (results.length === 0 || !key) {\n      this.getCity();\n    }\n  }\n\n  \n  \n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" style=\"color:white;\">ATM LOCATOR</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n  <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n     \n     <form class=\"form-inline my-2 my-lg-0\">\n        <input type=\"search\" (ngModelChange)=\"searchCity(key.value)\" #key=\"ngModel\" ngModel\n         name=\"key\" id=\"searchName\" class=\"form-control mr-sm-2\" placeholder=\"Type City...\" required>\n     </form>\n  </div>\n</nav>\n<div class=\"container\" id=\"main-container\">\n<div class=\"row\">\n  <div *ngFor=\"let address of address\" class=\"col-md-6 col-xl-3\">\n     <div class=\"card m-b-30\">\n        <div class=\"card-body row\">\n\n                   \n           <div class=\"col-6 card-title align-self-center mb-3\">\n              <h5 class=\"modal-title\" id=\"City\"> City {{address.city}}</h5>\n              <h5> House Number {{address.housenumber}}</h5>\n              <h5> Street {{address.street}}</h5>\n              <h5> Postal Code {{address.postalcode}}</h5>\n                           \n           </div>\n        </div>\n        \n        \n     </div>\n  </div>\n</div>\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeService } from './employee.service';\nimport { HttpClientModule } from '@angular/common/http';import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule, FormsModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { City } from './City';\nimport { Address } from './address';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({providedIn: 'root'})\nexport class EmployeeService {\n  private apiServerUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient){}\n\n  public getCities(): Observable<Address[]> {\n    return this.http.get<Address[]>(`${this.apiServerUrl}/getATMDutch/address/`);\n  }\n\n  public deleteEmployee(employeeId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiServerUrl}/employee/delete/${employeeId}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}