{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { City } from './City';\nimport { Address } from './address';\nimport { EmployeeService } from './employee.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public city: City[];\n  public address: Address[];\n  \n\n  constructor(private employeeService: EmployeeService){}\n\n  ngOnInit() {\n    this.getCity();\n  }\n\n  public getCity(): void {\n    this.employeeService.getCities().subscribe(\n      (response: Address[]) => {\n        this.address = response;\n        console.log(this.address);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  \n\n  public searchCity(key: string): void {\n    console.log(key);\n    const results: City[] = [];\n    for (const city of this.city) {\n      if (city.name.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      ) {\n        results.push(city);\n      }\n    }\n    this.city = results;\n    if (results.length === 0 || !key) {\n      this.getCity();\n    }\n  }\n\n  \n  \n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" style=\"color:white;\">ATM LOCATOR</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n  <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n     \n     <form class=\"form-inline my-2 my-lg-0\">\n        <input type=\"search\" (ngModelChange)=\"searchCity(key.value)\" #key=\"ngModel\" ngModel\n         name=\"key\" id=\"searchName\" class=\"form-control mr-sm-2\" placeholder=\"Type City...\" required>\n     </form>\n  </div>\n</nav>\n<div class=\"container\" id=\"main-container\">\n<div class=\"row\">\n  <div *ngFor=\"let address of address\" class=\"col-md-6 col-xl-3\">\n     <div class=\"card m-b-30\">\n        <div class=\"card-body row\">\n\n                   \n           <div class=\"col-6 card-title align-self-center mb-3\">\n              <h5 class=\"modal-title\" id=\"City\"> City {{address.city}}</h5>\n              <h5> House Number {{address.housenumber}}</h5>\n              <h5> Street {{address.street}}</h5>\n              <h5> Postal Code {{address.postalcode}}</h5>\n                           \n           </div>\n        </div>\n        \n        \n     </div>\n  </div>\n</div>\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeService } from './employee.service';\nimport { HttpClientModule } from '@angular/common/http';import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule, FormsModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { City } from './City';\nimport { Address } from './address';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({providedIn: 'root'})\nexport class EmployeeService {\n  private apiServerUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient){}\n\n  public getCities(): Observable<Address[]> {\n    return this.http.get<Address[]>(`${this.apiServerUrl}/getATMDutch/address/`);\n  }\n\n  public deleteEmployee(employeeId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiServerUrl}/employee/delete/${employeeId}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}